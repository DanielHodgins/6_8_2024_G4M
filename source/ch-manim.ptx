<?xml version='1.0' encoding='utf-8'?>
<chapter xml:id="ch-manim">
    <title>Manim</title>
    <section xml:id="sec-what-is-manim">
        <title>What Is Manim?</title>
        <p>
            Community Manim, (also just called Manim) stands for <q>Math Animation</q>
            It is a publically maintained, open-source commmunity version of a custom
            python package initially created by Grant Sanderson, more commonly known as
            <em>3Blue1Brown</em>.  <url>https://www.3blue1brown.com/</url>, <url>https://www.youtube.com/c/3blue1brown</url>
        </p>
        <p>
            Manim provides tools that can bring mathematical ideas and concepts to life that
            static words and explanations may not capture.  The TBIL Calculus I video series
            was animated entirely by Manim: <url>https://www.youtube.com/playlist?list=PLwXCBkIf7xBODPeQxULagMeWSK4YtLYog</url>.
        </p>
    </section>


    <section xml:id="sec-hello-world">
        <title>helloworld</title>
        <introduction>
            <p>
                We will run our very first Manim animation.
            </p>
        </introduction>
        <task>
            <statement>
                <p>
                    Open <c>helloworld.py</c>, and look through the code.
                </p>
            </statement>
        </task>
        <task>
            <statement>
                <p>
                    Run <c>helloworld.py</c>.  Congratulations, you have made 
                    your first manim animation!
                </p>
            </statement>
        </task>
    </section>

        

        <section xml:id="sec-first-animation">
            <title>My First Animation</title>

            <activity>
                <introduction>
                    <p>
                        Open <c>MyFirstAnimation.py</c>, and consider the first block <c>class tanline(Scene):</c>.
                    </p>
                    <p>
                        Read the documentation and the code presented.  This particular function <c>tanline</c> creates a curve, displays
                        the algebraic work needed to find a tangent line, and then displays said tangent line.
                    </p>
                    
                </introduction>

                <task>
                    <statement>
                        <p>
                            Run the code to produce a video file.
                        </p>
                    </statement>
                </task>

                <task>
                    <statement>
                        <p>
                            Edit the code to find and display the line tangent to the curve when <m>x=2</m>.
                        </p>
                    </statement>
                </task>

                <task>
                    <statement>
                        <p>
                            Change the window so that <m>x</m> ranges from <m>0</m> to <m>10</m>
                        </p>
                    </statement>
                </task>

                <task>
                    <statement>
                        <p>
                            Choose a function <m>f</m> and <m>x</m> value of your choice, and edit the code to find
                            and display the line tangent to <m>y=f(x)</m> at your choisen <m>x</m> value.
                        </p>
                        <p>
                            I find <url>https://www.desmos.com/</url> very helpful
                            in determining appropriate window sizes and scaling.
                        </p>
                    </statement>
                </task>
                
            </activity>


            <activity>
                <introduction>
                    <p>
                        Open <c>MyFirstAnimation.py</c> , and consider the first block <c>class sinchange(Scene):</c>.
                    </p>
                    <p>
                        This particular block of code plots a transformed sine function of the form <m>y=a\sin(bx)+c</m>. Where initially
                        <m>a=1, b=1, c=0</m>.  We then adjust the values for <m>a, b</m> and <m>c</m> over time.
                    </p>
                </introduction>

                <task>
                    <statement>
                        <p>
                            Run the code to produce a video file.
                        </p>
                    </statement>
                </task>

                <task>
                    <statement>
                        <p>
                            Edit the array <c>a=[1,2, 2,  2,  -1/3]</c>, and the <c>rhs</c> entries to adjust the vertical stretch.
                        </p>
                    </statement>
                </task>

                <task>
                    <statement>
                        <p>
                            Edit the array <c>b=[1,1, 1/2,1/2,-2]</c>, and the <c>rhs</c> entries to adjust the horizontal stretch.
                        </p>
                    </statement>
                </task>

                <task>
                    <statement>
                        <p>
                            Edit the array <c>c=[0,0, 0,  -3, 2]</c>, and the <c>rhs</c> entries to adjust the vertical shift.
                        </p>
                    </statement>
                </task>

                
                
            </activity>

            <activity>
                <introduction>
                    <p>
                        Open <c>DerivativeRules.py</c>

                    </p>
                    <p>
                        The function <c>FindProduct</c> displays a product rule computation, <c>FindQuotient</c> displays a quotient rule computation,
                        and <c>FindPower</c> displays a faux-quotient rule computation using powers.
                    </p>
                </introduction>
                <task>
                    <p>
                        Run the function <c>FindProduct</c> to produce a video file.
                    </p>
                </task>

                <task>
                    <p>
                        Pick your favorite product of functions and edit the code to produce the appropriate derivation.
                    </p>
                </task>

                <task>
                    <p>
                        Copy and paste the <c>FindProduct</c> function and rename it <c>FindChain</c>.
                    </p>
                </task>

                <task>
                    <p>
                        Edit this new command to display an animation for your favorite chain rule derivation.
                    </p>
                </task>

            </activity>

            <activity>
                <introduction>
                    <p>
                        Open <c>MyFirstAnimation.py</c>. Third function, Riemann rectangle.
                    </p>
                    <p>
                        This code displays a Riemann sum for a funcion, and displays the ongoing sum for
                        <m>R_n</m>.
                    </p>
                </introduction>

                <task>
                    <statement>
                        <p>
                            Run the code to see the output.
                        </p>
                    </statement>
                </task>


                <task>
                    <statement>
                        <p>
                            Change the function to a function of your chocie.  You may need to resize the window.
                            Recall the identitites <me>\sum_{i=1}^n i = \frac{n(n+1)}{2}, \sum_{i=1}^n i^2 = \frac{n(n+1)(2n+1)}{6},
                                \sum_{i=1}^n i^3 = \left( \frac{n(n+1)}{2}\right)^2.</me>
                        </p>
                    </statement>
                </task>

                
                
            </activity>

            <!--

            <activity>
                <introduction>
                    <p>
                        Open <c>3dstuff</c>
                    </p>
                </introduction>
                <task>
                    <statement>
                        <p>
                            Run code.
                        </p>
                    </statement>
                </task>
                <task>
                    <statement>
                        <p>
                            Change angles.
                        </p>
                    </statement>
                </task>
                <task>
                    <statement>
                        <p>
                            Change surface.
                        </p>
                    </statement>
                </task>
            </activity>-->

            <section xml:id="sec-resources">
                <title>Additional Resources:</title>
                <statement>
                    <p>
                        Here are a list of helpful links regarding manim authoring:
                        <ul>
                            <li>
                                <p>
                                    <url>https://docs.manim.community/en/stable/index.html</url>.  This is my goto
                                    place for FAQ's, working examples etc..
                                </p>
                            </li>
                        
                            <li>
                                <p>
                                    <url>https://discord.com/invite/bYCyhM9Kz2</url> a discord for manim,
                                    people can help here and you can run python code within the discord.
                                </p>
                            </li>
                        </ul>
                    </p>
                </statement>
                
            </section>
            


            

            

            

            <p>
                
            </p>
            
            
        </section>

    
</chapter>